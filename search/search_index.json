{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the contribution description This sub site will provide instructions to how to contribute to the IBM Maximo Labs and will cover the following topics: Introduction to the structure of the labs Setup development environment Add content to existing labs Build a new lab from scratch based on a template Deploy the IBM Maximo labs to IBM Cloud Updated: 2023-08-26","title":"Welcome to contribute"},{"location":"#welcome-to-the-contribution-description","text":"This sub site will provide instructions to how to contribute to the IBM Maximo Labs and will cover the following topics: Introduction to the structure of the labs Setup development environment Add content to existing labs Build a new lab from scratch based on a template Deploy the IBM Maximo labs to IBM Cloud Updated: 2023-08-26","title":"Welcome to the contribution description"},{"location":"about/","text":"Contributors to the Contribute site Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Change Information Date By Description 2023-08-26 Jan Ekstr\u00f8m Initial version of this MKDocs based documentation site. ---","title":"About"},{"location":"about/#contributors-to-the-contribute-site","text":"Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com","title":"Contributors to the Contribute site"},{"location":"about/#change-information","text":"Date By Description 2023-08-26 Jan Ekstr\u00f8m Initial version of this MKDocs based documentation site. ---","title":"Change Information"},{"location":"add_content/","text":"Add Content to existing lab Before starting to add or change existing content, create a branch for the changes. You can get a brief introduction to the use of branches here: https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches 1. Prepare your Git branch Basically you need to do the following to create a new branch locally and on the Github repo: git pull git checkout -b [name_of_your_new_branch] git push origin [name_of_your_new_branch] 2. Make changes Note If you are making a new lab, then jump over to \"Make first changes for new lab\" on Create new lab . Locate the labs folder under the /MkDocs, e.g. /MkDocs/monitor_8.2 Make the changes in the markdown files, image files, and mkdocs.yml file. Remember to do this: Update the about.md file with Contributors and Change Information. Update the index.md file with a new Updated date (at the end of the file). In the terminal navigate to the root of this git repo and execute the build script: ./build_all_mkdocs.sh Open the browser and navigate to http://localhost:8080/ in order to verify that your changes look as expected. Tip Press control-c to stop the web server and get back to the prompt. 3. Commit and push your changes When you are satisfied with your contribution take a look at the changes you have created in git: git status Add those files to git: git add . Commit the changes: git commit -sm \"Write a descriptive message of your changes\" Push the changes to the Github branch: git push origin [name_of_your_new_branch] Note Repeate step 2 and 3 until you have fulfilled the purpose of your branch. 4. Create Pull request Go to the Github repository https://github.com/IBM/monitor-hands-on-lab Select your branch in the dropdown box: Create a Pull request: Give it a title and description. Hit the Create pull request button. Remember to do this: Ask Carlos Ferreia (carlos.ferreira1@ibm.com) to review and accept your Pull Request. 5. Clean up branches locally and remotely (Github) Once the Pull request has been accepted and your commits are added to the master branch, it is time to clean up the branch locally and remotely (on Github). git checkout master git branch -d [name_of_your_new_branch] git push origin :[name_of_your_new_branch] Note The : before the [name_of_your_new_branch] in the last command will delete it on Github. Thank you ! You have now contributed to Maximo Labs - Thank you very much :-)","title":"Add content"},{"location":"add_content/#add-content-to-existing-lab","text":"Before starting to add or change existing content, create a branch for the changes. You can get a brief introduction to the use of branches here: https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches","title":"Add Content to existing lab"},{"location":"add_content/#1-prepare-your-git-branch","text":"Basically you need to do the following to create a new branch locally and on the Github repo: git pull git checkout -b [name_of_your_new_branch] git push origin [name_of_your_new_branch]","title":"1. Prepare your Git branch"},{"location":"add_content/#2-make-changes","text":"Note If you are making a new lab, then jump over to \"Make first changes for new lab\" on Create new lab . Locate the labs folder under the /MkDocs, e.g. /MkDocs/monitor_8.2 Make the changes in the markdown files, image files, and mkdocs.yml file. Remember to do this: Update the about.md file with Contributors and Change Information. Update the index.md file with a new Updated date (at the end of the file). In the terminal navigate to the root of this git repo and execute the build script: ./build_all_mkdocs.sh Open the browser and navigate to http://localhost:8080/ in order to verify that your changes look as expected. Tip Press control-c to stop the web server and get back to the prompt.","title":"2. Make changes"},{"location":"add_content/#3-commit-and-push-your-changes","text":"When you are satisfied with your contribution take a look at the changes you have created in git: git status Add those files to git: git add . Commit the changes: git commit -sm \"Write a descriptive message of your changes\" Push the changes to the Github branch: git push origin [name_of_your_new_branch] Note Repeate step 2 and 3 until you have fulfilled the purpose of your branch.","title":"3. Commit and push your changes"},{"location":"add_content/#4-create-pull-request","text":"Go to the Github repository https://github.com/IBM/monitor-hands-on-lab Select your branch in the dropdown box: Create a Pull request: Give it a title and description. Hit the Create pull request button. Remember to do this: Ask Carlos Ferreia (carlos.ferreira1@ibm.com) to review and accept your Pull Request.","title":"4. Create Pull request"},{"location":"add_content/#5-clean-up-branches-locally-and-remotely-github","text":"Once the Pull request has been accepted and your commits are added to the master branch, it is time to clean up the branch locally and remotely (on Github). git checkout master git branch -d [name_of_your_new_branch] git push origin :[name_of_your_new_branch] Note The : before the [name_of_your_new_branch] in the last command will delete it on Github. Thank you ! You have now contributed to Maximo Labs - Thank you very much :-)","title":"5. Clean up branches locally and remotely (Github)"},{"location":"create_new/","text":"Create new lab Creating a new lab follows the same process as under Add content : Prepare your Git branch Make changes Commit and push your changes Create Pull request Clean up branches locally and remotely (Github) The only difference is in the first time you execute step \"2. Make changes\", so follow this process: Follow step \"1. Prepare your Git branch\" under Add content . Come back here and run the below \"Make first changes for new lab\". Go back to Add content and run from step 3. (You are done here :-) Make first changes for new lab The following steps are used to crate a new lab based on the provided template 1. Replicate Template to your lab Select the template_1.0 folder Make a copy of the template_1.0 folder Rename the template_1.0 copy folder to < product >_< version > for wich this new lab is intended, e.g. mvi_saas Also rename the folder under img/template_1.0 using the same name lab name, e.g. img/mvi_saas . Save the file. Important It is important that this structure is kept consistent cross all labs in order to easily build and deploy the complete set of labs. 2. Modify the mkdocs.yml file The mkdocs.yml file holds the configuration of the new lab, i.e. some generic information about the new lab, like location of where the site will be created during the build and also which .md (markdown) files it consist of based on the navigation information. Select and open the mkdocs.yml file located in the root of you new lab folder Edit the marked areas suitable for your new lab Which could look like this Save the file. Note The nav: definition holds the navigation menu for the new lab. It is only the index.md and about.md that need to have some mandatory information, as explained below. The rest of the markdown files and navigation menu is defined by the way the lab is structured and how many exercises it consist of. 3. Modify the index.md file The index.md file is the landing / welcome page for the new lab. Select and open the index.md file located in the docs folder of you new lab Edit the file and make sure to change the marked areas suitable for your new lab Which could look like this Save the file. Remember to do this: Update the Updated at the end of this file to current date once the new lab is ready. 4. Modify the about.md file The about.md file contains a list of the contributors to this lab as well as the Change Information. Select and open the about.md file located in the docs folder of you new lab Edit the file and make sure to change the marked areas suitable for your new lab Which could look like this Save the file. Remember to do this: Update both sections when the lab is ready. 5. Add the new lab to the build script First we need to update the build_all_mkdocs.sh file located in the root of the monitor-hands-on-lab folder. This file contains the shell script for building the entire IBM Maximo Labs static web site. Select and open the build_all_mkdocs.sh file Scroll down to find # Build the template level: Copy the section and paste it above the #### DON't CHANGE THE BELOW MANDATORY... line. Change the comment and the lab= variable to match the folder of the new lab. Save the file. Attention Please don't change anything else! 6. Build and verify your lab content In a terminal navigate to the root of this git repo and execute the build script: ./build_all_mkdocs.sh It could look like this: Wait until it has finished building the whole site. Open a browser and navigate to http://localhost:8080/ in order to verify that the build was successful. If the new lab has not yet been added to the index.md in the toplevel page, then navigate directly to the new lab http://localhost:8080/mvi_saas in order to verify that your changes look as expected. Tip Press control-c to stop the web server and get back to the prompt. Congratulations, you have now created the foundation for the new lab following the structure and consistensy of the entire IBM Maximo Labs site. Now you \"only\" need to add all the content to the foundation, by adding markdown files and images according to the structure. Remember to do this: Go back to Add content and run from step 3. (You are done here :-) Note It is good practise to commit your changes once the foundation is in place - and again when you have created or updated every markdown files in the exercise.","title":"Create new lab"},{"location":"create_new/#create-new-lab","text":"Creating a new lab follows the same process as under Add content : Prepare your Git branch Make changes Commit and push your changes Create Pull request Clean up branches locally and remotely (Github) The only difference is in the first time you execute step \"2. Make changes\", so follow this process: Follow step \"1. Prepare your Git branch\" under Add content . Come back here and run the below \"Make first changes for new lab\". Go back to Add content and run from step 3. (You are done here :-)","title":"Create new lab"},{"location":"create_new/#make-first-changes-for-new-lab","text":"The following steps are used to crate a new lab based on the provided template","title":"Make first changes for new lab"},{"location":"create_new/#1-replicate-template-to-your-lab","text":"Select the template_1.0 folder Make a copy of the template_1.0 folder Rename the template_1.0 copy folder to < product >_< version > for wich this new lab is intended, e.g. mvi_saas Also rename the folder under img/template_1.0 using the same name lab name, e.g. img/mvi_saas . Save the file. Important It is important that this structure is kept consistent cross all labs in order to easily build and deploy the complete set of labs.","title":"1. Replicate Template to your lab"},{"location":"create_new/#2-modify-the-mkdocsyml-file","text":"The mkdocs.yml file holds the configuration of the new lab, i.e. some generic information about the new lab, like location of where the site will be created during the build and also which .md (markdown) files it consist of based on the navigation information. Select and open the mkdocs.yml file located in the root of you new lab folder Edit the marked areas suitable for your new lab Which could look like this Save the file. Note The nav: definition holds the navigation menu for the new lab. It is only the index.md and about.md that need to have some mandatory information, as explained below. The rest of the markdown files and navigation menu is defined by the way the lab is structured and how many exercises it consist of.","title":"2. Modify the mkdocs.yml file"},{"location":"create_new/#3-modify-the-indexmd-file","text":"The index.md file is the landing / welcome page for the new lab. Select and open the index.md file located in the docs folder of you new lab Edit the file and make sure to change the marked areas suitable for your new lab Which could look like this Save the file. Remember to do this: Update the Updated at the end of this file to current date once the new lab is ready.","title":"3. Modify the index.md file"},{"location":"create_new/#4-modify-the-aboutmd-file","text":"The about.md file contains a list of the contributors to this lab as well as the Change Information. Select and open the about.md file located in the docs folder of you new lab Edit the file and make sure to change the marked areas suitable for your new lab Which could look like this Save the file. Remember to do this: Update both sections when the lab is ready.","title":"4. Modify the about.md file"},{"location":"create_new/#5-add-the-new-lab-to-the-build-script","text":"First we need to update the build_all_mkdocs.sh file located in the root of the monitor-hands-on-lab folder. This file contains the shell script for building the entire IBM Maximo Labs static web site. Select and open the build_all_mkdocs.sh file Scroll down to find # Build the template level: Copy the section and paste it above the #### DON't CHANGE THE BELOW MANDATORY... line. Change the comment and the lab= variable to match the folder of the new lab. Save the file. Attention Please don't change anything else!","title":"5. Add the new lab to the build script"},{"location":"create_new/#6-build-and-verify-your-lab-content","text":"In a terminal navigate to the root of this git repo and execute the build script: ./build_all_mkdocs.sh It could look like this: Wait until it has finished building the whole site. Open a browser and navigate to http://localhost:8080/ in order to verify that the build was successful. If the new lab has not yet been added to the index.md in the toplevel page, then navigate directly to the new lab http://localhost:8080/mvi_saas in order to verify that your changes look as expected. Tip Press control-c to stop the web server and get back to the prompt. Congratulations, you have now created the foundation for the new lab following the structure and consistensy of the entire IBM Maximo Labs site. Now you \"only\" need to add all the content to the foundation, by adding markdown files and images according to the structure. Remember to do this: Go back to Add content and run from step 3. (You are done here :-) Note It is good practise to commit your changes once the foundation is in place - and again when you have created or updated every markdown files in the exercise.","title":"6. Build and verify your lab content"},{"location":"deploy/","text":"Deploy to IBM Cloud This part of the contribution is performed by Carlos Ferreia (carlos.ferreira1@ibm.com). Contact him to accept your Pull Request and then perform the build and deploy. Build the site: cd /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project ./build_all_mkdocs.sh Kill MK Docs Process and copy site content: ps -A | grep mkdocs cd /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project cp -R /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project/site/* /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project/mam-hol/public cd mam-hol Deploy using ibm cloud cf push: cd /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project/mam-hol ibmcloud login -sso ibmcloud account list Select account 1. IBM (10b59068b84d48c48f8300f8e1e63dba) ibmcloud target -c <<accpunt_id>> ibmcloud api https://api.eu-gb.bluemix.net ibmcloud target --cf-api https://api.eu-gb.bluemix.net -o carlos.ferreira1@ibm.com -s dev ibmcloud cf push","title":"Deploy to IBM Cloud"},{"location":"deploy/#deploy-to-ibm-cloud","text":"This part of the contribution is performed by Carlos Ferreia (carlos.ferreira1@ibm.com). Contact him to accept your Pull Request and then perform the build and deploy. Build the site: cd /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project ./build_all_mkdocs.sh Kill MK Docs Process and copy site content: ps -A | grep mkdocs cd /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project cp -R /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project/site/* /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project/mam-hol/public cd mam-hol Deploy using ibm cloud cf push: cd /Users/carlos.ferreira1ibm.com/ws/mkdocs/mam-hol-project/mam-hol ibmcloud login -sso ibmcloud account list Select account 1. IBM (10b59068b84d48c48f8300f8e1e63dba) ibmcloud target -c <<accpunt_id>> ibmcloud api https://api.eu-gb.bluemix.net ibmcloud target --cf-api https://api.eu-gb.bluemix.net -o carlos.ferreira1@ibm.com -s dev ibmcloud cf push","title":"Deploy to IBM Cloud"},{"location":"getting_started/","text":"Getting Started with contributing to The IBM Maximo Labs! The first things you need to understand is the way this site is build and how the architecture looks like. This is needed so that your changes and additions does not break the consistancy and structure of the complete IBM Maximo Labs site. Structure of the labs Here is the structure of the IBM Maximo Labs: Location of the git repositories The root folder of the monitor-hands-on-lab git repository. Basically only contain the build script and the MkDocs folder with all the MkDocs content folders. A separate folder for each lab in the form _ e.g. monitor_8.2. The toplevel, template_1.0 and contribute are all part of the main content and structure for the complete site, beside each individual lab folder. Only contain the mkdocs.yml file to configure the MkDocs build of this site / sub-site. The content is stored in the docs folder. Location of the markdown files that is the source files for the specific sub-site. The index.md is the landing page for the lab. The img folder only contain one folder with the same name as the site / sub-site selected in level 3. This is needed when the complete site is build. Location of the images for that site / sub-site. They should be referenced as img/ .png within the markdown files. Building the labs overview Once you have the development environment in place and have cloned or forked the github repository, you are ready to look at the /build_all_mkdocs.sh file which is the shell script that is being used to build all the MkDocs that this site is being build of. Basically the /build_all_mkdocs.sh is divided into some different sections that each build the various MkDocs sites and subsites that the complete site comprises of. These are the building blocks of the build script: Setting up some variables and erase the old site completely to avoid any leftovers Building the toplevel content Building the various labs with each there own separate MkDocs structure and navigation menu Building the template and this contribute subsite Finish up and start a webserver, so that you can look and navigate in the complete site Now you are ready to setup your development environment :-)","title":"Get started"},{"location":"getting_started/#getting-started-with-contributing-tothe-ibm-maximo-labs","text":"The first things you need to understand is the way this site is build and how the architecture looks like. This is needed so that your changes and additions does not break the consistancy and structure of the complete IBM Maximo Labs site.","title":"Getting Started with contributing toThe IBM Maximo Labs!"},{"location":"getting_started/#structure-of-the-labs","text":"Here is the structure of the IBM Maximo Labs: Location of the git repositories The root folder of the monitor-hands-on-lab git repository. Basically only contain the build script and the MkDocs folder with all the MkDocs content folders. A separate folder for each lab in the form _ e.g. monitor_8.2. The toplevel, template_1.0 and contribute are all part of the main content and structure for the complete site, beside each individual lab folder. Only contain the mkdocs.yml file to configure the MkDocs build of this site / sub-site. The content is stored in the docs folder. Location of the markdown files that is the source files for the specific sub-site. The index.md is the landing page for the lab. The img folder only contain one folder with the same name as the site / sub-site selected in level 3. This is needed when the complete site is build. Location of the images for that site / sub-site. They should be referenced as img/ .png within the markdown files.","title":"Structure of the labs"},{"location":"getting_started/#building-the-labs-overview","text":"Once you have the development environment in place and have cloned or forked the github repository, you are ready to look at the /build_all_mkdocs.sh file which is the shell script that is being used to build all the MkDocs that this site is being build of. Basically the /build_all_mkdocs.sh is divided into some different sections that each build the various MkDocs sites and subsites that the complete site comprises of. These are the building blocks of the build script: Setting up some variables and erase the old site completely to avoid any leftovers Building the toplevel content Building the various labs with each there own separate MkDocs structure and navigation menu Building the template and this contribute subsite Finish up and start a webserver, so that you can look and navigate in the complete site Now you are ready to setup your development environment :-)","title":"Building the labs overview"},{"location":"prereqs/","text":"Pre-Requisite Instructions Here are the required pre-requisites for contributing to The Maximo Labs. Install Python 3 It is recommended to install and use the latest release of Python 3. First install Homebrew on Mac and then Python 3: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" brew install python3 Additional Information Installing Homebrew: https://brew.sh/ Installing Python 3: https://formulae.brew.sh/formula/python3 Uninstalling tips: https://huybien.com/how-to-completely-uninstall-python-on-macos/ https://docs.brew.sh/FAQ#how-do-i-uninstall-homebrew Install MkDocs You will be using the package installer for python (pip) to install MkDocs within a python virtual environment (venv). First lets get the python 3 virtual environment up and running: cd ~ pwd python3 -m venv max-py3 cd max-py3/bin source activate python -V pip -V pip list Then you will install the MkDocs packages and verify the packages has been installed: pip install mkdocs pip list You can deactivate the virtual environment with this command: deactivate Additional Information MkDocs: https://www.mkdocs.org/ Package Installer for Python: https://pip.pypa.io/en/stable/ Python 3 virtual environments: https://docs.python.org/3/library/venv.html Git / Github setup Get a Github account IBMers can get access to the IBM Github area here: https://w3.ibm.com/developer/opensource/ibm-github/ Access the Github repo of the IBM Maximo Labs here: https://github.com/IBM/monitor-hands-on-lab Access the latest published labs here: http://maximo-lab.monitordemo4.ibmmam.com/ (This might not contain the latest changes from the Github repository) Clone the github repository down to your local machine: cd ~ mkdir Github cd ~/Github git clone git@github.com:IBM/monitor-hands-on-lab.git cd monitor-hands-on-lab Now build the complete site on your local machine: ./build_all_mkdocs.sh Open a browser and navigate to http://localhost:8080/ and take a look at the complete IBM Maximo Labs locally. To find these contribute instructions navigate to http://localhost:8080/contribute Next step You are now ready to either add to an existing lab or create a new lab from scratch .","title":"Pre-Requisites"},{"location":"prereqs/#pre-requisite-instructions","text":"Here are the required pre-requisites for contributing to The Maximo Labs.","title":"Pre-Requisite Instructions"},{"location":"prereqs/#install-python-3","text":"It is recommended to install and use the latest release of Python 3. First install Homebrew on Mac and then Python 3: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" brew install python3 Additional Information Installing Homebrew: https://brew.sh/ Installing Python 3: https://formulae.brew.sh/formula/python3 Uninstalling tips: https://huybien.com/how-to-completely-uninstall-python-on-macos/ https://docs.brew.sh/FAQ#how-do-i-uninstall-homebrew","title":"Install Python 3"},{"location":"prereqs/#install-mkdocs","text":"You will be using the package installer for python (pip) to install MkDocs within a python virtual environment (venv). First lets get the python 3 virtual environment up and running: cd ~ pwd python3 -m venv max-py3 cd max-py3/bin source activate python -V pip -V pip list Then you will install the MkDocs packages and verify the packages has been installed: pip install mkdocs pip list You can deactivate the virtual environment with this command: deactivate Additional Information MkDocs: https://www.mkdocs.org/ Package Installer for Python: https://pip.pypa.io/en/stable/ Python 3 virtual environments: https://docs.python.org/3/library/venv.html","title":"Install MkDocs"},{"location":"prereqs/#git-github-setup","text":"Get a Github account IBMers can get access to the IBM Github area here: https://w3.ibm.com/developer/opensource/ibm-github/ Access the Github repo of the IBM Maximo Labs here: https://github.com/IBM/monitor-hands-on-lab Access the latest published labs here: http://maximo-lab.monitordemo4.ibmmam.com/ (This might not contain the latest changes from the Github repository) Clone the github repository down to your local machine: cd ~ mkdir Github cd ~/Github git clone git@github.com:IBM/monitor-hands-on-lab.git cd monitor-hands-on-lab Now build the complete site on your local machine: ./build_all_mkdocs.sh Open a browser and navigate to http://localhost:8080/ and take a look at the complete IBM Maximo Labs locally. To find these contribute instructions navigate to http://localhost:8080/contribute Next step You are now ready to either add to an existing lab or create a new lab from scratch .","title":"Git / Github setup"}]}